
package puzzle;

import java.lang.reflect.*;
import java.util.HashMap; 
import java.util.Map; 

public class Puzzle {
    
    static int p = 24;
    private static int[] arrayNums;
    static boolean b;
    
    static String formula;
                
    public void setNums() {
        int[] n = new int[4];
        n[0]= 4;
        n[1]= 1;
        n[2]= 8;
        n[3]= 7;
        arrayNums = n;
    }
            
    public static void main(String[] args) 
            throws IllegalAccessException, IllegalArgumentException, InvocationTargetException {
        Puzzle s = new Puzzle();
        s.setNums();
        s.canBeEqualTo24(arrayNums);
        System.out.println(b + " "+ formula +"="+p);
        
    }
    
    public boolean canBeEqualTo24(int[] nums) 
    throws IllegalAccessException, IllegalArgumentException, InvocationTargetException {
        Sequence seq = new Sequence();
        float[] r = new float[4];
            r[0] =  nums[0]; 
            r[1] =  nums[1];
            r[2] =  nums[2];
            r[3] =  nums[3];
                
        Method[] m = Sequence.class.getMethods();
               
        for (Method m1 : m) {
            float[] result = (float[]) m1.invoke(seq, r);
            String MethodName = m1.getName();
            
            this.all(result);            //method of combination
            if (b==true){
                break;
            }
        }
             
        return b;
      
    }
 
    public boolean all (float[]a){
        
        Map<Integer, String> hashMap = new HashMap<Integer, String>();
        
        
        
        // a-combination x_a[1]_a[2]_a[3] 64
        hashMap.put((int)(a[0]+a[1]+a[2]+a[3]), String.format("%.0f+%.0f+%.0f+%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+a[1]+a[2]-a[3]), String.format("%.0f+%.0f+%.0f-%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+a[1]+a[2]*a[3]), String.format("%.0f+%.0f+%.0f*%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]+a[2]/a[3]), String.format("%.0f+%.0f+%.0f/%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]-a[2]+a[3]), String.format("%.0f+%.0f-%.0f+%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]-a[2]-a[3]), String.format("%.0f+%.0f-%.0f-%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]-a[2]*a[3]), String.format("%.0f+%.0f-%.0f*%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]-a[2]/a[3]), String.format("%.0f+%.0f-%.0f/%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]*a[2]+a[3]), String.format("%.0f+%.0f*%.0f+%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]*a[2]-a[3]), String.format("%.0f+%.0f*%.0f-%.0f", a[0],a[1],a[2],a[3]));  
        hashMap.put((int)(a[0]+a[1]*a[2]*a[3]), String.format("%.0f+%.0f*%.0f*%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+a[1]*a[2]/a[3]), String.format("%.0f+%.0f*%.0f/%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+a[1]/a[2]+a[3]), String.format("%.0f+%.0f/%.0f+%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+a[1]/a[2]-a[3]), String.format("%.0f+%.0f/%.0f-%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+a[1]/a[2]*a[3]), String.format("%.0f+%.0f/%.0f*%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]/a[2]/a[3]), String.format("%.0f+%.0f/%.0f/%.0f", a[0],a[1],a[2],a[3]));
        
        hashMap.put((int)(a[0]-a[1]+a[2]+a[3]), String.format("%.0f-%.0f+%.0f+%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]+a[2]-a[3]), String.format("%.0f-%.0f+%.0f-%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]-a[1]+a[2]*a[3]), String.format("%.0f-%.0f+%.0f*%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]+a[2]/a[3]), String.format("%.0f-%.0f+%.0f/%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]-a[2]+a[3]), String.format("%.0f-%.0f-%.0f+%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]-a[2]-a[3]), String.format("%.0f-%.0f-%.0f-%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]-a[1]-a[2]*a[3]), String.format("%.0f-%.0f-%.0f*%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]-a[2]/a[3]), String.format("%.0f-%.0f-%.0f/%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]*a[2]+a[3]), String.format("%.0f-%.0f*%.0f+%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]*a[2]-a[3]), String.format("%.0f-%.0f*%.0f-%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]*a[2]*a[3]), String.format("%.0f-%.0f*%.0f*%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]-a[1]*a[2]/a[3]), String.format("%.0f-%.0f*%.0f/%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]/a[2]+a[3]), String.format("%.0f-%.0f/%.0f+%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]/a[2]-a[3]), String.format("%.0f-%.0f/%.0f-%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]-a[1]/a[2]*a[3]), String.format("%.0f-%.0f/%.0f*%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]/a[2]/a[3]), String.format("%.0f-%.0f/%.0f/%.0f", a[0],a[1],a[2],a[3])); 
        
        hashMap.put((int)(a[0]*a[1]+a[2]+a[3]), String.format("%.0f*%.0f+%.0f+%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]+a[2]-a[3]), String.format("%.0f*%.0f+%.0f-%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]*a[1]+a[2]*a[3]), String.format("%.0f*%.0f+%.0f*%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]+a[2]/a[3]), String.format("%.0f*%.0f+%.0f/%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]-a[2]+a[3]), String.format("%.0f*%.0f-%.0f+%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]-a[2]-a[3]), String.format("%.0f*%.0f-%.0f-%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]*a[1]-a[2]*a[3]), String.format("%.0f*%.0f-%.0f*%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]-a[2]/a[3]), String.format("%.0f*%.0f-%.0f/%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]*a[2]+a[3]), String.format("%.0f*%.0f*%.0f+%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]*a[2]-a[3]), String.format("%.0f*%.0f*%.0f-%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]*a[1]*a[2]*a[3]), String.format("%.0f*%.0f*%.0f*%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]*a[2]/a[3]), String.format("%.0f*%.0f*%.0f/%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]/a[2]+a[3]), String.format("%.0f*%.0f/%.0f+%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]/a[2]-a[3]), String.format("%.0f*%.0f/%.0f-%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]*a[1]/a[2]*a[3]), String.format("%.0f*%.0f/%.0f*%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]/a[2]/a[3]), String.format("%.0f*%.0f/%.0f/%.0f", a[0],a[1],a[2],a[3]));
        
        hashMap.put((int)(a[0]/a[1]+a[2]+a[3]), String.format("%.0f/%.0f+%.0f+%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]+a[2]-a[3]), String.format("%.0f/%.0f+%.0f-%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]/a[1]+a[2]*a[3]), String.format("%.0f/%.0f+%.0f*%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]+a[2]/a[3]), String.format("%.0f/%.0f+%.0f/%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]-a[2]+a[3]), String.format("%.0f/%.0f-%.0f+%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]-a[2]-a[3]), String.format("%.0f/%.0f-%.0f-%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]/a[1]-a[2]*a[3]), String.format("%.0f/%.0f-%.0f*%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]-a[2]/a[3]), String.format("%.0f/%.0f-%.0f/%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]*a[2]+a[3]), String.format("%.0f/%.0f*%.0f+%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]*a[2]-a[3]), String.format("%.0f/%.0f*%.0f-%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]/a[1]*a[2]*a[3]), String.format("%.0f/%.0f*%.0f*%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]*a[2]/a[3]), String.format("%.0f/%.0f*%.0f/%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]/a[2]+a[3]), String.format("%.0f/%.0f/%.0f+%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]/a[2]-a[3]), String.format("%.0f/%.0f/%.0f-%.0f", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]/a[1]/a[2]*a[3]), String.format("%.0f/%.0f/%.0f*%.0f", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]/a[2]/a[3]), String.format("%.0f/%.0f/%.0f/%.0f", a[0],a[1],a[2],a[3]));
    
    
    // b-combination a[0]_a[1]_(a[2]_a[3])
        hashMap.put((int)(a[0]+a[1]+(a[2]+a[3])), String.format("%.0f+%.0f+(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]+(a[2]-a[3])), String.format("%.0f+%.0f+(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+a[1]+(a[2]*a[3])), String.format("%.0f+%.0f+(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]+(a[2]/a[3])), String.format("%.0f+%.0f+(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]-(a[2]+a[3])), String.format("%.0f+%.0f-(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]-(a[2]-a[3])), String.format("%.0f+%.0f-(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+a[1]-(a[2]*a[3])), String.format("%.0f+%.0f-(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]-(a[2]/a[3])), String.format("%.0f+%.0f-(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]*(a[2]+a[3])), String.format("%.0f+%.0f*(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]*(a[2]-a[3])), String.format("%.0f+%.0f*(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+a[1]*(a[2]*a[3])), String.format("%.0f+%.0f*(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]*(a[2]/a[3])), String.format("%.0f+%.0f*(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]/(a[2]+a[3])), String.format("%.0f+%.0f/(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]/(a[2]-a[3])), String.format("%.0f+%.0f/(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+a[1]/(a[2]*a[3])), String.format("%.0f+%.0f/(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+a[1]/(a[2]/a[3])), String.format("%.0f+%.0f/(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
    
        hashMap.put((int)(a[0]-a[1]+(a[2]+a[3])), String.format("%.0f-%.0f+(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]+(a[2]-a[3])), String.format("%.0f-%.0f+(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]-a[1]+(a[2]*a[3])), String.format("%.0f-%.0f+(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]+(a[2]/a[3])), String.format("%.0f-%.0f+(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]-(a[2]+a[3])), String.format("%.0f-%.0f-(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]-(a[2]-a[3])), String.format("%.0f-%.0f-(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]-a[1]-(a[2]*a[3])), String.format("%.0f-%.0f-(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]-(a[2]/a[3])), String.format("%.0f-%.0f-(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]*(a[2]+a[3])), String.format("%.0f-%.0f*(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]*(a[2]-a[3])), String.format("%.0f-%.0f*(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]-a[1]*(a[2]*a[3])), String.format("%.0f-%.0f*(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]*(a[2]/a[3])), String.format("%.0f-%.0f*(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]/(a[2]+a[3])), String.format("%.0f-%.0f/(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]/(a[2]-a[3])), String.format("%.0f-%.0f/(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]-a[1]/(a[2]*a[3])), String.format("%.0f-%.0f/(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-a[1]/(a[2]/a[3])), String.format("%.0f-%.0f/(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
    
        hashMap.put((int)(a[0]*a[1]+(a[2]+a[3])), String.format("%.0f*%.0f+(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]+(a[2]-a[3])), String.format("%.0f*%.0f+(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]*a[1]+(a[2]*a[3])), String.format("%.0f*%.0f+(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]+(a[2]/a[3])), String.format("%.0f*%.0f+(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]-(a[2]+a[3])), String.format("%.0f*%.0f-(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]-(a[2]-a[3])), String.format("%.0f*%.0f-(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]*a[1]-(a[2]*a[3])), String.format("%.0f*%.0f-(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]-(a[2]/a[3])), String.format("%.0f*%.0f-(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]*(a[2]+a[3])), String.format("%.0f*%.0f*(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]*(a[2]-a[3])), String.format("%.0f*%.0f*(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]*a[1]*(a[2]*a[3])), String.format("%.0f*%.0f*(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]*(a[2]/a[3])), String.format("%.0f*%.0f*(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]/(a[2]+a[3])), String.format("%.0f*%.0f/(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]/(a[2]-a[3])), String.format("%.0f*%.0f/(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]*a[1]/(a[2]*a[3])), String.format("%.0f*%.0f/(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*a[1]/(a[2]/a[3])), String.format("%.0f*%.0f/(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
    
        hashMap.put((int)(a[0]/a[1]+(a[2]+a[3])), String.format("%.0f/%.0f+(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]+(a[2]-a[3])), String.format("%.0f/%.0f+(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]/a[1]+(a[2]*a[3])), String.format("%.0f/%.0f+(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]+(a[2]/a[3])), String.format("%.0f/%.0f+(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]-(a[2]+a[3])), String.format("%.0f/%.0f-(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]-(a[2]-a[3])), String.format("%.0f/%.0f-(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]/a[1]-(a[2]*a[3])), String.format("%.0f/%.0f-(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]-(a[2]/a[3])), String.format("%.0f/%.0f-(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]*(a[2]+a[3])), String.format("%.0f/%.0f*(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]*(a[2]-a[3])), String.format("%.0f/%.0f*(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]/a[1]*(a[2]*a[3])), String.format("%.0f/%.0f*(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]*(a[2]/a[3])), String.format("%.0f/%.0f*(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]/(a[2]+a[3])), String.format("%.0f/%.0f/(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]/(a[2]-a[3])), String.format("%.0f/%.0f/(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]/a[1]/(a[2]*a[3])), String.format("%.0f/%.0f/(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/a[1]/(a[2]/a[3])), String.format("%.0f/%.0f/(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
    
    
    // c-combination (a[0]_a[1])_(a[2]_a[3])
        hashMap.put((int)((a[0]+a[1])+(a[2]+a[3])), String.format("(%.0f+%.0f)+(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]+a[1])+(a[2]-a[3])), String.format("(%.0f+%.0f)+(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)((a[0]+a[1])+(a[2]*a[3])), String.format("(%.0f+%.0f)+(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]+a[1])+(a[2]/a[3])), String.format("(%.0f+%.0f)+(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]+a[1])-(a[2]+a[3])), String.format("(%.0f+%.0f)-(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]+a[1])-(a[2]-a[3])), String.format("(%.0f+%.0f)-(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)((a[0]+a[1])-(a[2]*a[3])), String.format("(%.0f+%.0f)-(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]+a[1])-(a[2]/a[3])), String.format("(%.0f+%.0f)-(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]+a[1])*(a[2]+a[3])), String.format("(%.0f+%.0f)*(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]+a[1])*(a[2]-a[3])), String.format("(%.0f+%.0f)*(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)((a[0]+a[1])*(a[2]*a[3])), String.format("(%.0f+%.0f)*(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]+a[1])*(a[2]/a[3])), String.format("(%.0f+%.0f)*(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]+a[1])/(a[2]+a[3])), String.format("(%.0f+%.0f)/(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]+a[1])/(a[2]-a[3])), String.format("(%.0f+%.0f)/(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)((a[0]+a[1])/(a[2]*a[3])), String.format("(%.0f+%.0f)/(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]+a[1])/(a[2]/a[3])), String.format("(%.0f+%.0f)/(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
    
        hashMap.put((int)((a[0]-a[1])+(a[2]+a[3])), String.format("(%.0f-%.0f)+(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]-a[1])+(a[2]-a[3])), String.format("(%.0f-%.0f)+(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)((a[0]-a[1])+(a[2]*a[3])), String.format("(%.0f-%.0f)+(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]-a[1])+(a[2]/a[3])), String.format("(%.0f-%.0f)+(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]-a[1])-(a[2]+a[3])), String.format("(%.0f-%.0f)-(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]-a[1])-(a[2]-a[3])), String.format("(%.0f-%.0f)-(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)((a[0]-a[1])-(a[2]*a[3])), String.format("(%.0f-%.0f)-(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]-a[1])-(a[2]/a[3])), String.format("(%.0f-%.0f)-(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]-a[1])*(a[2]+a[3])), String.format("(%.0f-%.0f)*(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]-a[1])*(a[2]-a[3])), String.format("(%.0f-%.0f)*(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)((a[0]-a[1])*(a[2]*a[3])), String.format("(%.0f-%.0f)*(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]-a[1])*(a[2]/a[3])), String.format("(%.0f-%.0f)*(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]-a[1])/(a[2]+a[3])), String.format("(%.0f-%.0f)/(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]-a[1])/(a[2]-a[3])), String.format("(%.0f-%.0f)/(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)((a[0]-a[1])/(a[2]*a[3])), String.format("(%.0f-%.0f)/(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]-a[1])/(a[2]/a[3])), String.format("(%.0f-%.0f)/(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
    
        hashMap.put((int)((a[0]*a[1])+(a[2]+a[3])), String.format("(%.0f*%.0f)+(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]*a[1])+(a[2]-a[3])), String.format("(%.0f*%.0f)+(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)((a[0]*a[1])+(a[2]*a[3])), String.format("(%.0f*%.0f)+(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]*a[1])+(a[2]/a[3])), String.format("(%.0f*%.0f)+(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]*a[1])-(a[2]+a[3])), String.format("(%.0f*%.0f)-(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]*a[1])-(a[2]-a[3])), String.format("(%.0f*%.0f)-(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)((a[0]*a[1])-(a[2]*a[3])), String.format("(%.0f*%.0f)-(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]*a[1])-(a[2]/a[3])), String.format("(%.0f*%.0f)-(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]*a[1])*(a[2]+a[3])), String.format("(%.0f*%.0f)*(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]*a[1])*(a[2]-a[3])), String.format("(%.0f*%.0f)*(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)((a[0]*a[1])*(a[2]*a[3])), String.format("(%.0f*%.0f)*(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]*a[1])*(a[2]/a[3])), String.format("(%.0f*%.0f)*(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]*a[1])/(a[2]+a[3])), String.format("(%.0f*%.0f)/(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]*a[1])/(a[2]-a[3])), String.format("(%.0f*%.0f)/(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)((a[0]*a[1])/(a[2]*a[3])), String.format("(%.0f*%.0f)/(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]*a[1])/(a[2]/a[3])), String.format("(%.0f*%.0f)/(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
    
        hashMap.put((int)((a[0]/a[1])+(a[2]+a[3])), String.format("(%.0f/%.0f)+(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]/a[1])+(a[2]-a[3])), String.format("(%.0f/%.0f)+(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)((a[0]/a[1])+(a[2]*a[3])), String.format("(%.0f/%.0f)+(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]/a[1])+(a[2]/a[3])), String.format("(%.0f/%.0f)+(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]/a[1])-(a[2]+a[3])), String.format("(%.0f/%.0f)-(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]/a[1])-(a[2]-a[3])), String.format("(%.0f/%.0f)-(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)((a[0]/a[1])-(a[2]*a[3])), String.format("(%.0f/%.0f)-(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]/a[1])-(a[2]/a[3])), String.format("(%.0f/%.0f)-(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]/a[1])*(a[2]+a[3])), String.format("(%.0f/%.0f)*(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]/a[1])*(a[2]-a[3])), String.format("(%.0f/%.0f)*(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)((a[0]/a[1])*(a[2]*a[3])), String.format("(%.0f/%.0f)*(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]/a[1])*(a[2]/a[3])), String.format("(%.0f/%.0f)*(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]/a[1])/(a[2]+a[3])), String.format("(%.0f/%.0f)/(%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]/a[1])/(a[2]-a[3])), String.format("(%.0f/%.0f)/(%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)((a[0]/a[1])/(a[2]*a[3])), String.format("(%.0f/%.0f)/(%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)((a[0]/a[1])/(a[2]/a[3])), String.format("(%.0f/%.0f)/(%.0f/%.0f)", a[0],a[1],a[2],a[3]));
    
    
    // d-combination a[0]_(a[1]_a[2]_a[3])
        hashMap.put((int)(a[0]+(a[1]+a[2]+a[3])), String.format("%.0f+(%.0f+%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]+a[2]-a[3])), String.format("%.0f+(%.0f+%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+(a[1]+a[2]*a[3])), String.format("%.0f+(%.0f+%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]+a[2]/a[3])), String.format("%.0f+(%.0f+%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]-a[2]+a[3])), String.format("%.0f+(%.0f-%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]-a[2]-a[3])), String.format("%.0f+(%.0f-%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+(a[1]-a[2]*a[3])), String.format("%.0f+(%.0f-%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]-a[2]/a[3])), String.format("%.0f+(%.0f-%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]*a[2]+a[3])), String.format("%.0f+(%.0f*%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]*a[2]-a[3])), String.format("%.0f+(%.0f*%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+(a[1]*a[2]*a[3])), String.format("%.0f+(%.0f*%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]*a[2]/a[3])), String.format("%.0f+(%.0f*%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]/a[2]+a[3])), String.format("%.0f+(%.0f/%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]/a[2]-a[3])), String.format("%.0f+(%.0f/%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+(a[1]/a[2]*a[3])), String.format("%.0f+(%.0f/%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]/a[2]/a[3])), String.format("%.0f+(%.0f/%.0f/%.0f)", a[0],a[1],a[2],a[3]));
   
        hashMap.put((int)(a[0]-(a[1]+a[2]+a[3])), String.format("%.0f-(%.0f+%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]+a[2]-a[3])), String.format("%.0f-(%.0f+%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]-(a[1]+a[2]*a[3])), String.format("%.0f-(%.0f+%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]+a[2]/a[3])), String.format("%.0f-(%.0f+%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]-a[2]+a[3])), String.format("%.0f-(%.0f-%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]-a[2]-a[3])), String.format("%.0f-(%.0f-%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]-(a[1]-a[2]*a[3])), String.format("%.0f-(%.0f-%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]-a[2]/a[3])), String.format("%.0f-(%.0f-%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]*a[2]+a[3])), String.format("%.0f-(%.0f*%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]*a[2]-a[3])), String.format("%.0f-(%.0f*%.0f-%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]*a[2]*a[3])), String.format("%.0f-(%.0f*%.0f*%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]-(a[1]*a[2]/a[3])), String.format("%.0f-(%.0f*%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]/a[2]+a[3])), String.format("%.0f-(%.0f/%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]/a[2]-a[3])), String.format("%.0f-(%.0f/%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]-(a[1]/a[2]*a[3])), String.format("%.0f-(%.0f/%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]/a[2]/a[3])), String.format("%.0f-(%.0f/%.0f/%.0f)", a[0],a[1],a[2],a[3])); 
   
        hashMap.put((int)(a[0]*(a[1]+a[2]+a[3])), String.format("%.0f*(%.0f+%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]+a[2]-a[3])), String.format("%.0f*(%.0f+%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]*(a[1]+a[2]*a[3])), String.format("%.0f*(%.0f+%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]+a[2]/a[3])), String.format("%.0f*(%.0f+%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]-a[2]+a[3])), String.format("%.0f*(%.0f-%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]-a[2]-a[3])), String.format("%.0f*(%.0f-%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]*(a[1]-a[2]*a[3])), String.format("%.0f*(%.0f-%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]-a[2]/a[3])), String.format("%.0f*(%.0f-%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]*a[2]+a[3])), String.format("%.0f*(%.0f*%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]*a[2]-a[3])), String.format("%.0f*(%.0f*%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]*(a[1]*a[2]*a[3])), String.format("%.0f*(%.0f*%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]*a[2]/a[3])), String.format("%.0f*(%.0f*%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]/a[2]+a[3])), String.format("%.0f*(%.0f/%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]/a[2]-a[3])), String.format("%.0f*(%.0f/%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]*(a[1]/a[2]*a[3])), String.format("%.0f*(%.0f/%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]/a[2]/a[3])), String.format("%.0f*(%.0f/%.0f/%.0f)", a[0],a[1],a[2],a[3]));
    
        hashMap.put((int)(a[0]/(a[1]+a[2]+a[3])), String.format("%.0f/(%.0f+%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]+a[2]-a[3])), String.format("%.0f/(%.0f+%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]/(a[1]+a[2]*a[3])), String.format("%.0f/(%.0f+%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]+a[2]/a[3])), String.format("%.0f/(%.0f+%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]-a[2]+a[3])), String.format("%.0f/(%.0f-%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]-a[2]-a[3])), String.format("%.0f/(%.0f-%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]/(a[1]-a[2]*a[3])), String.format("%.0f/(%.0f-%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]-a[2]/a[3])), String.format("%.0f/(%.0f-%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]*a[2]+a[3])), String.format("%.0f/(%.0f*%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]*a[2]-a[3])), String.format("%.0f/(%.0f*%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]/(a[1]*a[2]*a[3])), String.format("%.0f/(%.0f*%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]*a[2]/a[3])), String.format("%.0f/(%.0f*%.0f/%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]/a[2]+a[3])), String.format("%.0f/(%.0f/%.0f+%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]/a[2]-a[3])), String.format("%.0f/(%.0f/%.0f-%.0f)", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]/(a[1]/a[2]*a[3])), String.format("%.0f/(%.0f/%.0f*%.0f)", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]/a[2]/a[3])), String.format("%.0f/(%.0f/%.0f/%.0f)", a[0],a[1],a[2],a[3]));
    
    
    // e-combination a[0]_(a[1]_(a[2]_a[3]))
        hashMap.put((int)(a[0]+(a[1]+(a[2]+a[3]))), String.format("%.0f+(%.0f+(%.0f+%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]+(a[2]-a[3]))), String.format("%.0f+(%.0f+(%.0f-%.0f))", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+(a[1]+(a[2]*a[3]))), String.format("%.0f+(%.0f+(%.0f*%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]+(a[2]/a[3]))), String.format("%.0f+(%.0f+(%.0f/%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]-(a[2]+a[3]))), String.format("%.0f+(%.0f-(%.0f+%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]-(a[2]-a[3]))), String.format("%.0f+(%.0f-(%.0f-%.0f))", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+(a[1]-(a[2]*a[3]))), String.format("%.0f+(%.0f-(%.0f*%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]-(a[2]/a[3]))), String.format("%.0f+(%.0f-(%.0f/%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]*(a[2]+a[3]))), String.format("%.0f+(%.0f*(%.0f+%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]*(a[2]-a[3]))), String.format("%.0f+(%.0f*(%.0f-%.0f))", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+(a[1]*(a[2]*a[3]))), String.format("%.0f+(%.0f*(%.0f*%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]*(a[2]/a[3]))), String.format("%.0f+(%.0f*(%.0f/%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]/(a[2]+a[3]))), String.format("%.0f+(%.0f/(%.0f+%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]/(a[2]-a[3]))), String.format("%.0f+(%.0f/(%.0f-%.0f))", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]+(a[1]/(a[2]*a[3]))), String.format("%.0f+(%.0f/(%.0f*%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]+(a[1]/(a[2]/a[3]))), String.format("%.0f+(%.0f/(%.0f/%.0f))", a[0],a[1],a[2],a[3]));
   
        hashMap.put((int)(a[0]-(a[1]+(a[2]+a[3]))), String.format("%.0f-(%.0f+(%.0f+%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]+(a[2]-a[3]))), String.format("%.0f-(%.0f+(%.0f-%.0f))", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]-(a[1]+(a[2]*a[3]))), String.format("%.0f-(%.0f+(%.0f*%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]+(a[2]/a[3]))), String.format("%.0f-(%.0f+(%.0f/%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]-(a[2]+a[3]))), String.format("%.0f-(%.0f-(%.0f+%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]-(a[2]-a[3]))), String.format("%.0f-(%.0f-(%.0f-%.0f))", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]-(a[1]-(a[2]*a[3]))), String.format("%.0f-(%.0f-(%.0f*%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]-(a[2]/a[3]))), String.format("%.0f-(%.0f-(%.0f/%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]*(a[2]+a[3]))), String.format("%.0f-(%.0f*(%.0f+%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]*(a[2]-a[3]))), String.format("%.0f-(%.0f*(%.0f-%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]*(a[2]*a[3]))), String.format("%.0f-(%.0f*(%.0f*%.0f))", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]-(a[1]*(a[2]/a[3]))), String.format("%.0f-(%.0f*(%.0f/%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]/(a[2]+a[3]))), String.format("%.0f-(%.0f/(%.0f+%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]/(a[2]-a[3]))), String.format("%.0f-(%.0f/(%.0f-%.0f))", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]-(a[1]/(a[2]*a[3]))), String.format("%.0f-(%.0f/(%.0f*%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]-(a[1]/(a[2]/a[3]))), String.format("%.0f-(%.0f/(%.0f/%.0f))", a[0],a[1],a[2],a[3])); 
   
        hashMap.put((int)(a[0]*(a[1]+(a[2]+a[3]))), String.format("%.0f*(%.0f+(%.0f+%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]+(a[2]-a[3]))), String.format("%.0f*(%.0f+(%.0f-%.0f))", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]*(a[1]+(a[2]*a[3]))), String.format("%.0f*(%.0f+(%.0f*%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]+(a[2]/a[3]))), String.format("%.0f*(%.0f+(%.0f/%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]-(a[2]+a[3]))), String.format("%.0f*(%.0f-(%.0f+%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]-(a[2]-a[3]))), String.format("%.0f*(%.0f-(%.0f-%.0f))", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]*(a[1]-(a[2]*a[3]))), String.format("%.0f*(%.0f-(%.0f*%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]-(a[2]/a[3]))), String.format("%.0f*(%.0f-(%.0f/%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]*(a[2]+a[3]))), String.format("%.0f*(%.0f*(%.0f+%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]*(a[2]-a[3]))), String.format("%.0f*(%.0f*(%.0f-%.0f))", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]*(a[1]*(a[2]*a[3]))), String.format("%.0f*(%.0f*(%.0f*%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]*(a[2]/a[3]))), String.format("%.0f*(%.0f*(%.0f/%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]/(a[2]+a[3]))), String.format("%.0f*(%.0f/(%.0f+%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]/(a[2]-a[3]))), String.format("%.0f*(%.0f/(%.0f-%.0f))", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]*(a[1]/(a[2]*a[3]))), String.format("%.0f*(%.0f/(%.0f*%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]*(a[1]/(a[2]/a[3]))), String.format("%.0f*(%.0f/(%.0f/%.0f))", a[0],a[1],a[2],a[3]));
    
        hashMap.put((int)(a[0]/(a[1]+(a[2]+a[3]))), String.format("%.0f/(%.0f+(%.0f+%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]+(a[2]-a[3]))), String.format("%.0f/(%.0f+(%.0f-%.0f))", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]/(a[1]+(a[2]*a[3]))), String.format("%.0f/(%.0f+(%.0f*%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]+(a[2]/a[3]))), String.format("%.0f/(%.0f+(%.0f/%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]-(a[2]+a[3]))), String.format("%.0f/(%.0f-(%.0f+%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]-(a[2]-a[3]))), String.format("%.0f/(%.0f-(%.0f-%.0f))", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]/(a[1]-(a[2]*a[3]))), String.format("%.0f/(%.0f-(%.0f*%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]-(a[2]/a[3]))), String.format("%.0f/(%.0f-(%.0f/%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]*(a[2]+a[3]))), String.format("%.0f/(%.0f*(%.0f+%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]*(a[2]-a[3]))), String.format("%.0f/(%.0f*(%.0f-%.0f))", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]/(a[1]*(a[2]*a[3]))), String.format("%.0f/(%.0f*(%.0f*%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]*(a[2]/a[3]))), String.format("%.0f/(%.0f*(%.0f/%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]/(a[2]+a[3]))), String.format("%.0f/(%.0f/(%.0f+%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]/(a[2]-a[3]))), String.format("%.0f/(%.0f/(%.0f-%.0f))", a[0],a[1],a[2],a[3])); 
        hashMap.put((int)(a[0]/(a[1]/(a[2]*a[3]))), String.format("%.0f/(%.0f/(%.0f*%.0f))", a[0],a[1],a[2],a[3]));
        hashMap.put((int)(a[0]/(a[1]/(a[2]/a[3]))), String.format("%.0f/(%.0f/(%.0f/%.0f))", a[0],a[1],a[2],a[3]));
        
        for (Integer key : hashMap.keySet()) {
            if (key==p) {
                b = true;
                formula = hashMap.get(key);
                break;
            } else {
                b = false;
            }
            
        }
           
    return b;
    } 
}
